/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as OauthCallbackImport } from './routes/oauth-callback'
import { Route as LoginImport } from './routes/login'
import { Route as LoggedOutImport } from './routes/logged-out'
import { Route as HomeImport } from './routes/home'
import { Route as AboutImport } from './routes/about'
import { Route as AuthenticatedImport } from './routes/_authenticated'
import { Route as IndexImport } from './routes/index'
import { Route as AuthenticatedAppRouteImport } from './routes/_authenticated/app/route'
import { Route as AuthenticatedAppIndexImport } from './routes/_authenticated/app/index'
import { Route as AuthenticatedAppPricesImport } from './routes/_authenticated/app/prices'
import { Route as AuthenticatedAppOffTakeImport } from './routes/_authenticated/app/off-take'
import { Route as AuthenticatedAppLivestockDataImport } from './routes/_authenticated/app/livestock-data'
import { Route as AuthenticatedAppHayImport } from './routes/_authenticated/app/hay'
import { Route as AuthenticatedAppFodderOfftakeImport } from './routes/_authenticated/app/fodder-offtake'
import { Route as AuthenticatedAppFodderDataImport } from './routes/_authenticated/app/fodder-data'
import { Route as AuthenticatedAppFodderImport } from './routes/_authenticated/app/fodder'
import { Route as AuthenticatedAppCapacityDataImport } from './routes/_authenticated/app/capacity-data'
import { Route as AuthenticatedAppCapacityImport } from './routes/_authenticated/app/capacity'
import { Route as AuthenticatedAppBoreholeImport } from './routes/_authenticated/app/borehole'
import { Route as AuthenticatedAppAdminRouteImport } from './routes/_authenticated/app/_admin/route'
import { Route as AuthenticatedAppAdminUsersImport } from './routes/_authenticated/app/_admin/users'
import { Route as AuthenticatedAppAdminUploadImport } from './routes/_authenticated/app/_admin/upload'
import { Route as AuthenticatedAppAdminCreateUserImport } from './routes/_authenticated/app/_admin/create-user'

// Create/Update Routes

const OauthCallbackRoute = OauthCallbackImport.update({
  id: '/oauth-callback',
  path: '/oauth-callback',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const LoggedOutRoute = LoggedOutImport.update({
  id: '/logged-out',
  path: '/logged-out',
  getParentRoute: () => rootRoute,
} as any)

const HomeRoute = HomeImport.update({
  id: '/home',
  path: '/home',
  getParentRoute: () => rootRoute,
} as any)

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedRoute = AuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedAppRouteRoute = AuthenticatedAppRouteImport.update({
  id: '/app',
  path: '/app',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedAppIndexRoute = AuthenticatedAppIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticatedAppRouteRoute,
} as any)

const AuthenticatedAppPricesRoute = AuthenticatedAppPricesImport.update({
  id: '/prices',
  path: '/prices',
  getParentRoute: () => AuthenticatedAppRouteRoute,
} as any)

const AuthenticatedAppOffTakeRoute = AuthenticatedAppOffTakeImport.update({
  id: '/off-take',
  path: '/off-take',
  getParentRoute: () => AuthenticatedAppRouteRoute,
} as any)

const AuthenticatedAppLivestockDataRoute =
  AuthenticatedAppLivestockDataImport.update({
    id: '/livestock-data',
    path: '/livestock-data',
    getParentRoute: () => AuthenticatedAppRouteRoute,
  } as any)

const AuthenticatedAppHayRoute = AuthenticatedAppHayImport.update({
  id: '/hay',
  path: '/hay',
  getParentRoute: () => AuthenticatedAppRouteRoute,
} as any)

const AuthenticatedAppFodderOfftakeRoute =
  AuthenticatedAppFodderOfftakeImport.update({
    id: '/fodder-offtake',
    path: '/fodder-offtake',
    getParentRoute: () => AuthenticatedAppRouteRoute,
  } as any)

const AuthenticatedAppFodderDataRoute = AuthenticatedAppFodderDataImport.update(
  {
    id: '/fodder-data',
    path: '/fodder-data',
    getParentRoute: () => AuthenticatedAppRouteRoute,
  } as any,
)

const AuthenticatedAppFodderRoute = AuthenticatedAppFodderImport.update({
  id: '/fodder',
  path: '/fodder',
  getParentRoute: () => AuthenticatedAppRouteRoute,
} as any)

const AuthenticatedAppCapacityDataRoute =
  AuthenticatedAppCapacityDataImport.update({
    id: '/capacity-data',
    path: '/capacity-data',
    getParentRoute: () => AuthenticatedAppRouteRoute,
  } as any)

const AuthenticatedAppCapacityRoute = AuthenticatedAppCapacityImport.update({
  id: '/capacity',
  path: '/capacity',
  getParentRoute: () => AuthenticatedAppRouteRoute,
} as any)

const AuthenticatedAppBoreholeRoute = AuthenticatedAppBoreholeImport.update({
  id: '/borehole',
  path: '/borehole',
  getParentRoute: () => AuthenticatedAppRouteRoute,
} as any)

const AuthenticatedAppAdminRouteRoute = AuthenticatedAppAdminRouteImport.update(
  {
    id: '/_admin',
    getParentRoute: () => AuthenticatedAppRouteRoute,
  } as any,
)

const AuthenticatedAppAdminUsersRoute = AuthenticatedAppAdminUsersImport.update(
  {
    id: '/users',
    path: '/users',
    getParentRoute: () => AuthenticatedAppAdminRouteRoute,
  } as any,
)

const AuthenticatedAppAdminUploadRoute =
  AuthenticatedAppAdminUploadImport.update({
    id: '/upload',
    path: '/upload',
    getParentRoute: () => AuthenticatedAppAdminRouteRoute,
  } as any)

const AuthenticatedAppAdminCreateUserRoute =
  AuthenticatedAppAdminCreateUserImport.update({
    id: '/create-user',
    path: '/create-user',
    getParentRoute: () => AuthenticatedAppAdminRouteRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/home': {
      id: '/home'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof HomeImport
      parentRoute: typeof rootRoute
    }
    '/logged-out': {
      id: '/logged-out'
      path: '/logged-out'
      fullPath: '/logged-out'
      preLoaderRoute: typeof LoggedOutImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/oauth-callback': {
      id: '/oauth-callback'
      path: '/oauth-callback'
      fullPath: '/oauth-callback'
      preLoaderRoute: typeof OauthCallbackImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/app': {
      id: '/_authenticated/app'
      path: '/app'
      fullPath: '/app'
      preLoaderRoute: typeof AuthenticatedAppRouteImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/app/_admin': {
      id: '/_authenticated/app/_admin'
      path: ''
      fullPath: '/app'
      preLoaderRoute: typeof AuthenticatedAppAdminRouteImport
      parentRoute: typeof AuthenticatedAppRouteImport
    }
    '/_authenticated/app/borehole': {
      id: '/_authenticated/app/borehole'
      path: '/borehole'
      fullPath: '/app/borehole'
      preLoaderRoute: typeof AuthenticatedAppBoreholeImport
      parentRoute: typeof AuthenticatedAppRouteImport
    }
    '/_authenticated/app/capacity': {
      id: '/_authenticated/app/capacity'
      path: '/capacity'
      fullPath: '/app/capacity'
      preLoaderRoute: typeof AuthenticatedAppCapacityImport
      parentRoute: typeof AuthenticatedAppRouteImport
    }
    '/_authenticated/app/capacity-data': {
      id: '/_authenticated/app/capacity-data'
      path: '/capacity-data'
      fullPath: '/app/capacity-data'
      preLoaderRoute: typeof AuthenticatedAppCapacityDataImport
      parentRoute: typeof AuthenticatedAppRouteImport
    }
    '/_authenticated/app/fodder': {
      id: '/_authenticated/app/fodder'
      path: '/fodder'
      fullPath: '/app/fodder'
      preLoaderRoute: typeof AuthenticatedAppFodderImport
      parentRoute: typeof AuthenticatedAppRouteImport
    }
    '/_authenticated/app/fodder-data': {
      id: '/_authenticated/app/fodder-data'
      path: '/fodder-data'
      fullPath: '/app/fodder-data'
      preLoaderRoute: typeof AuthenticatedAppFodderDataImport
      parentRoute: typeof AuthenticatedAppRouteImport
    }
    '/_authenticated/app/fodder-offtake': {
      id: '/_authenticated/app/fodder-offtake'
      path: '/fodder-offtake'
      fullPath: '/app/fodder-offtake'
      preLoaderRoute: typeof AuthenticatedAppFodderOfftakeImport
      parentRoute: typeof AuthenticatedAppRouteImport
    }
    '/_authenticated/app/hay': {
      id: '/_authenticated/app/hay'
      path: '/hay'
      fullPath: '/app/hay'
      preLoaderRoute: typeof AuthenticatedAppHayImport
      parentRoute: typeof AuthenticatedAppRouteImport
    }
    '/_authenticated/app/livestock-data': {
      id: '/_authenticated/app/livestock-data'
      path: '/livestock-data'
      fullPath: '/app/livestock-data'
      preLoaderRoute: typeof AuthenticatedAppLivestockDataImport
      parentRoute: typeof AuthenticatedAppRouteImport
    }
    '/_authenticated/app/off-take': {
      id: '/_authenticated/app/off-take'
      path: '/off-take'
      fullPath: '/app/off-take'
      preLoaderRoute: typeof AuthenticatedAppOffTakeImport
      parentRoute: typeof AuthenticatedAppRouteImport
    }
    '/_authenticated/app/prices': {
      id: '/_authenticated/app/prices'
      path: '/prices'
      fullPath: '/app/prices'
      preLoaderRoute: typeof AuthenticatedAppPricesImport
      parentRoute: typeof AuthenticatedAppRouteImport
    }
    '/_authenticated/app/': {
      id: '/_authenticated/app/'
      path: '/'
      fullPath: '/app/'
      preLoaderRoute: typeof AuthenticatedAppIndexImport
      parentRoute: typeof AuthenticatedAppRouteImport
    }
    '/_authenticated/app/_admin/create-user': {
      id: '/_authenticated/app/_admin/create-user'
      path: '/create-user'
      fullPath: '/app/create-user'
      preLoaderRoute: typeof AuthenticatedAppAdminCreateUserImport
      parentRoute: typeof AuthenticatedAppAdminRouteImport
    }
    '/_authenticated/app/_admin/upload': {
      id: '/_authenticated/app/_admin/upload'
      path: '/upload'
      fullPath: '/app/upload'
      preLoaderRoute: typeof AuthenticatedAppAdminUploadImport
      parentRoute: typeof AuthenticatedAppAdminRouteImport
    }
    '/_authenticated/app/_admin/users': {
      id: '/_authenticated/app/_admin/users'
      path: '/users'
      fullPath: '/app/users'
      preLoaderRoute: typeof AuthenticatedAppAdminUsersImport
      parentRoute: typeof AuthenticatedAppAdminRouteImport
    }
  }
}

// Create and export the route tree

interface AuthenticatedAppAdminRouteRouteChildren {
  AuthenticatedAppAdminCreateUserRoute: typeof AuthenticatedAppAdminCreateUserRoute
  AuthenticatedAppAdminUploadRoute: typeof AuthenticatedAppAdminUploadRoute
  AuthenticatedAppAdminUsersRoute: typeof AuthenticatedAppAdminUsersRoute
}

const AuthenticatedAppAdminRouteRouteChildren: AuthenticatedAppAdminRouteRouteChildren =
  {
    AuthenticatedAppAdminCreateUserRoute: AuthenticatedAppAdminCreateUserRoute,
    AuthenticatedAppAdminUploadRoute: AuthenticatedAppAdminUploadRoute,
    AuthenticatedAppAdminUsersRoute: AuthenticatedAppAdminUsersRoute,
  }

const AuthenticatedAppAdminRouteRouteWithChildren =
  AuthenticatedAppAdminRouteRoute._addFileChildren(
    AuthenticatedAppAdminRouteRouteChildren,
  )

interface AuthenticatedAppRouteRouteChildren {
  AuthenticatedAppAdminRouteRoute: typeof AuthenticatedAppAdminRouteRouteWithChildren
  AuthenticatedAppBoreholeRoute: typeof AuthenticatedAppBoreholeRoute
  AuthenticatedAppCapacityRoute: typeof AuthenticatedAppCapacityRoute
  AuthenticatedAppCapacityDataRoute: typeof AuthenticatedAppCapacityDataRoute
  AuthenticatedAppFodderRoute: typeof AuthenticatedAppFodderRoute
  AuthenticatedAppFodderDataRoute: typeof AuthenticatedAppFodderDataRoute
  AuthenticatedAppFodderOfftakeRoute: typeof AuthenticatedAppFodderOfftakeRoute
  AuthenticatedAppHayRoute: typeof AuthenticatedAppHayRoute
  AuthenticatedAppLivestockDataRoute: typeof AuthenticatedAppLivestockDataRoute
  AuthenticatedAppOffTakeRoute: typeof AuthenticatedAppOffTakeRoute
  AuthenticatedAppPricesRoute: typeof AuthenticatedAppPricesRoute
  AuthenticatedAppIndexRoute: typeof AuthenticatedAppIndexRoute
}

const AuthenticatedAppRouteRouteChildren: AuthenticatedAppRouteRouteChildren = {
  AuthenticatedAppAdminRouteRoute: AuthenticatedAppAdminRouteRouteWithChildren,
  AuthenticatedAppBoreholeRoute: AuthenticatedAppBoreholeRoute,
  AuthenticatedAppCapacityRoute: AuthenticatedAppCapacityRoute,
  AuthenticatedAppCapacityDataRoute: AuthenticatedAppCapacityDataRoute,
  AuthenticatedAppFodderRoute: AuthenticatedAppFodderRoute,
  AuthenticatedAppFodderDataRoute: AuthenticatedAppFodderDataRoute,
  AuthenticatedAppFodderOfftakeRoute: AuthenticatedAppFodderOfftakeRoute,
  AuthenticatedAppHayRoute: AuthenticatedAppHayRoute,
  AuthenticatedAppLivestockDataRoute: AuthenticatedAppLivestockDataRoute,
  AuthenticatedAppOffTakeRoute: AuthenticatedAppOffTakeRoute,
  AuthenticatedAppPricesRoute: AuthenticatedAppPricesRoute,
  AuthenticatedAppIndexRoute: AuthenticatedAppIndexRoute,
}

const AuthenticatedAppRouteRouteWithChildren =
  AuthenticatedAppRouteRoute._addFileChildren(
    AuthenticatedAppRouteRouteChildren,
  )

interface AuthenticatedRouteChildren {
  AuthenticatedAppRouteRoute: typeof AuthenticatedAppRouteRouteWithChildren
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedAppRouteRoute: AuthenticatedAppRouteRouteWithChildren,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof AuthenticatedRouteWithChildren
  '/about': typeof AboutRoute
  '/home': typeof HomeRoute
  '/logged-out': typeof LoggedOutRoute
  '/login': typeof LoginRoute
  '/oauth-callback': typeof OauthCallbackRoute
  '/app': typeof AuthenticatedAppAdminRouteRouteWithChildren
  '/app/borehole': typeof AuthenticatedAppBoreholeRoute
  '/app/capacity': typeof AuthenticatedAppCapacityRoute
  '/app/capacity-data': typeof AuthenticatedAppCapacityDataRoute
  '/app/fodder': typeof AuthenticatedAppFodderRoute
  '/app/fodder-data': typeof AuthenticatedAppFodderDataRoute
  '/app/fodder-offtake': typeof AuthenticatedAppFodderOfftakeRoute
  '/app/hay': typeof AuthenticatedAppHayRoute
  '/app/livestock-data': typeof AuthenticatedAppLivestockDataRoute
  '/app/off-take': typeof AuthenticatedAppOffTakeRoute
  '/app/prices': typeof AuthenticatedAppPricesRoute
  '/app/': typeof AuthenticatedAppIndexRoute
  '/app/create-user': typeof AuthenticatedAppAdminCreateUserRoute
  '/app/upload': typeof AuthenticatedAppAdminUploadRoute
  '/app/users': typeof AuthenticatedAppAdminUsersRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof AuthenticatedRouteWithChildren
  '/about': typeof AboutRoute
  '/home': typeof HomeRoute
  '/logged-out': typeof LoggedOutRoute
  '/login': typeof LoginRoute
  '/oauth-callback': typeof OauthCallbackRoute
  '/app': typeof AuthenticatedAppIndexRoute
  '/app/borehole': typeof AuthenticatedAppBoreholeRoute
  '/app/capacity': typeof AuthenticatedAppCapacityRoute
  '/app/capacity-data': typeof AuthenticatedAppCapacityDataRoute
  '/app/fodder': typeof AuthenticatedAppFodderRoute
  '/app/fodder-data': typeof AuthenticatedAppFodderDataRoute
  '/app/fodder-offtake': typeof AuthenticatedAppFodderOfftakeRoute
  '/app/hay': typeof AuthenticatedAppHayRoute
  '/app/livestock-data': typeof AuthenticatedAppLivestockDataRoute
  '/app/off-take': typeof AuthenticatedAppOffTakeRoute
  '/app/prices': typeof AuthenticatedAppPricesRoute
  '/app/create-user': typeof AuthenticatedAppAdminCreateUserRoute
  '/app/upload': typeof AuthenticatedAppAdminUploadRoute
  '/app/users': typeof AuthenticatedAppAdminUsersRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/about': typeof AboutRoute
  '/home': typeof HomeRoute
  '/logged-out': typeof LoggedOutRoute
  '/login': typeof LoginRoute
  '/oauth-callback': typeof OauthCallbackRoute
  '/_authenticated/app': typeof AuthenticatedAppRouteRouteWithChildren
  '/_authenticated/app/_admin': typeof AuthenticatedAppAdminRouteRouteWithChildren
  '/_authenticated/app/borehole': typeof AuthenticatedAppBoreholeRoute
  '/_authenticated/app/capacity': typeof AuthenticatedAppCapacityRoute
  '/_authenticated/app/capacity-data': typeof AuthenticatedAppCapacityDataRoute
  '/_authenticated/app/fodder': typeof AuthenticatedAppFodderRoute
  '/_authenticated/app/fodder-data': typeof AuthenticatedAppFodderDataRoute
  '/_authenticated/app/fodder-offtake': typeof AuthenticatedAppFodderOfftakeRoute
  '/_authenticated/app/hay': typeof AuthenticatedAppHayRoute
  '/_authenticated/app/livestock-data': typeof AuthenticatedAppLivestockDataRoute
  '/_authenticated/app/off-take': typeof AuthenticatedAppOffTakeRoute
  '/_authenticated/app/prices': typeof AuthenticatedAppPricesRoute
  '/_authenticated/app/': typeof AuthenticatedAppIndexRoute
  '/_authenticated/app/_admin/create-user': typeof AuthenticatedAppAdminCreateUserRoute
  '/_authenticated/app/_admin/upload': typeof AuthenticatedAppAdminUploadRoute
  '/_authenticated/app/_admin/users': typeof AuthenticatedAppAdminUsersRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/about'
    | '/home'
    | '/logged-out'
    | '/login'
    | '/oauth-callback'
    | '/app'
    | '/app/borehole'
    | '/app/capacity'
    | '/app/capacity-data'
    | '/app/fodder'
    | '/app/fodder-data'
    | '/app/fodder-offtake'
    | '/app/hay'
    | '/app/livestock-data'
    | '/app/off-take'
    | '/app/prices'
    | '/app/'
    | '/app/create-user'
    | '/app/upload'
    | '/app/users'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/about'
    | '/home'
    | '/logged-out'
    | '/login'
    | '/oauth-callback'
    | '/app'
    | '/app/borehole'
    | '/app/capacity'
    | '/app/capacity-data'
    | '/app/fodder'
    | '/app/fodder-data'
    | '/app/fodder-offtake'
    | '/app/hay'
    | '/app/livestock-data'
    | '/app/off-take'
    | '/app/prices'
    | '/app/create-user'
    | '/app/upload'
    | '/app/users'
  id:
    | '__root__'
    | '/'
    | '/_authenticated'
    | '/about'
    | '/home'
    | '/logged-out'
    | '/login'
    | '/oauth-callback'
    | '/_authenticated/app'
    | '/_authenticated/app/_admin'
    | '/_authenticated/app/borehole'
    | '/_authenticated/app/capacity'
    | '/_authenticated/app/capacity-data'
    | '/_authenticated/app/fodder'
    | '/_authenticated/app/fodder-data'
    | '/_authenticated/app/fodder-offtake'
    | '/_authenticated/app/hay'
    | '/_authenticated/app/livestock-data'
    | '/_authenticated/app/off-take'
    | '/_authenticated/app/prices'
    | '/_authenticated/app/'
    | '/_authenticated/app/_admin/create-user'
    | '/_authenticated/app/_admin/upload'
    | '/_authenticated/app/_admin/users'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
  AboutRoute: typeof AboutRoute
  HomeRoute: typeof HomeRoute
  LoggedOutRoute: typeof LoggedOutRoute
  LoginRoute: typeof LoginRoute
  OauthCallbackRoute: typeof OauthCallbackRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
  AboutRoute: AboutRoute,
  HomeRoute: HomeRoute,
  LoggedOutRoute: LoggedOutRoute,
  LoginRoute: LoginRoute,
  OauthCallbackRoute: OauthCallbackRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_authenticated",
        "/about",
        "/home",
        "/logged-out",
        "/login",
        "/oauth-callback"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_authenticated": {
      "filePath": "_authenticated.tsx",
      "children": [
        "/_authenticated/app"
      ]
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/home": {
      "filePath": "home.tsx"
    },
    "/logged-out": {
      "filePath": "logged-out.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/oauth-callback": {
      "filePath": "oauth-callback.tsx"
    },
    "/_authenticated/app": {
      "filePath": "_authenticated/app/route.tsx",
      "parent": "/_authenticated",
      "children": [
        "/_authenticated/app/_admin",
        "/_authenticated/app/borehole",
        "/_authenticated/app/capacity",
        "/_authenticated/app/capacity-data",
        "/_authenticated/app/fodder",
        "/_authenticated/app/fodder-data",
        "/_authenticated/app/fodder-offtake",
        "/_authenticated/app/hay",
        "/_authenticated/app/livestock-data",
        "/_authenticated/app/off-take",
        "/_authenticated/app/prices",
        "/_authenticated/app/"
      ]
    },
    "/_authenticated/app/_admin": {
      "filePath": "_authenticated/app/_admin/route.tsx",
      "parent": "/_authenticated/app",
      "children": [
        "/_authenticated/app/_admin/create-user",
        "/_authenticated/app/_admin/upload",
        "/_authenticated/app/_admin/users"
      ]
    },
    "/_authenticated/app/borehole": {
      "filePath": "_authenticated/app/borehole.tsx",
      "parent": "/_authenticated/app"
    },
    "/_authenticated/app/capacity": {
      "filePath": "_authenticated/app/capacity.tsx",
      "parent": "/_authenticated/app"
    },
    "/_authenticated/app/capacity-data": {
      "filePath": "_authenticated/app/capacity-data.tsx",
      "parent": "/_authenticated/app"
    },
    "/_authenticated/app/fodder": {
      "filePath": "_authenticated/app/fodder.tsx",
      "parent": "/_authenticated/app"
    },
    "/_authenticated/app/fodder-data": {
      "filePath": "_authenticated/app/fodder-data.tsx",
      "parent": "/_authenticated/app"
    },
    "/_authenticated/app/fodder-offtake": {
      "filePath": "_authenticated/app/fodder-offtake.tsx",
      "parent": "/_authenticated/app"
    },
    "/_authenticated/app/hay": {
      "filePath": "_authenticated/app/hay.tsx",
      "parent": "/_authenticated/app"
    },
    "/_authenticated/app/livestock-data": {
      "filePath": "_authenticated/app/livestock-data.tsx",
      "parent": "/_authenticated/app"
    },
    "/_authenticated/app/off-take": {
      "filePath": "_authenticated/app/off-take.tsx",
      "parent": "/_authenticated/app"
    },
    "/_authenticated/app/prices": {
      "filePath": "_authenticated/app/prices.tsx",
      "parent": "/_authenticated/app"
    },
    "/_authenticated/app/": {
      "filePath": "_authenticated/app/index.tsx",
      "parent": "/_authenticated/app"
    },
    "/_authenticated/app/_admin/create-user": {
      "filePath": "_authenticated/app/_admin/create-user.tsx",
      "parent": "/_authenticated/app/_admin"
    },
    "/_authenticated/app/_admin/upload": {
      "filePath": "_authenticated/app/_admin/upload.tsx",
      "parent": "/_authenticated/app/_admin"
    },
    "/_authenticated/app/_admin/users": {
      "filePath": "_authenticated/app/_admin/users.tsx",
      "parent": "/_authenticated/app/_admin"
    }
  }
}
ROUTE_MANIFEST_END */
